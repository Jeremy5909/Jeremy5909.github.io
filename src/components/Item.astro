---
const {name,location,tags} = Astro.props;
---


<div class="element transform-style-3d transition-all duration-100  bg-slate-800  m-4 rounded-md first-letter:capitalize border-4 border-slate-700 shadow-md">
    <h1 class="text-3xl font-bold">{name}</h1>
    <h2>Location: {location}</h2>
    <h2 class="capitalize">Tags: {tags.join(", ")}</h2>
</div>

<script>
    let elements = document.querySelectorAll(".element");

    function getTransform(x, y, el) {
        const box = el.getBoundingClientRect();
        const screenDiagonal = Math.sqrt(window.innerWidth ** 2 + window.innerHeight ** 2);

        // Adjust the constrain value relative to screen size.
        const constrain = screenDiagonal / 10; // Adjust the divisor as needed

        const calcX = -(y - box.y - (box.height / 2)) / constrain;
        const calcY = (x - box.x - (box.width / 2)) / constrain;

        // Adjust the angles to make the rotation more balanced.
        const rotateXValue = calcX * 5; // Set to 1
        const rotateYValue = calcY * 1; // Adjust this factor as needed

        // Adjust the perspective value to make the text closer or farther in 3D space.
        const perspectiveValue = 100; // You can change this value as needed

        return `perspective(${perspectiveValue}px) rotateX(${rotateXValue}deg) rotateY(${rotateYValue}deg)`;
    }

    function transformElement(el, xy) {
        const [x, y] = xy;
        el.style.transition = 'transform 0.3s'; // Adjust the duration as needed
        el.style.transform = getTransform(x, y, el);
    }

    elements.forEach((element) => {
        const elementElement = element as HTMLElement; // Renamed to elementElement
        elementElement.onmousemove = function(e) {
            const xy = [e.clientX, e.clientY];
            window.requestAnimationFrame(function() {
                transformElement(elementElement, xy);
            });
        };

        elementElement.onmouseout = function() {
            // Reset the transform property after a short delay to give the appearance of a smooth transition.
            // setTimeout(() => {
            //     elementElement.style.transition = 'transform 0.3s'; // Adjust the duration as needed
            //     elementElement.style.transform = 'translate(0, 0)';
            // }, 10); // Adjust the delay time as needed
            elementElement.style.transform = "translate(0,0)";
        };
    });
</script>
